{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/apiservice.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/common\";\nfunction ExchangeratesComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtext(1, \" Loading... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ExchangeratesComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Exchange Rates\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ExchangeratesComponent_div_1_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.refreshRates());\n    });\n    i0.ɵɵtext(8, \"Refresh\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"USD: \", ctx_r1.exchangeRates.USD, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"BRL: \", ctx_r1.exchangeRates.BRL, \"\");\n  }\n}\nexport class ExchangeratesComponent {\n  constructor(apiService, toastr) {\n    this.apiService = apiService;\n    this.toastr = toastr;\n    this.exchangeRates = {};\n    this.loading = false;\n  }\n  ngOnInit() {\n    this.refreshRates();\n  }\n  refreshRates() {\n    this.loading = true;\n    // For USD\n    this.apiService.getExchangeRate('USD').subscribe(rate => {\n      this.exchangeRates.USD = rate;\n      this.loading = false;\n    }, error => {\n      this.toastr.error(`The following error has occurred ${error}`);\n      this.loading = false;\n    });\n    this.loading = true;\n    // For BRL\n    this.apiService.getExchangeRate('BRL').subscribe(rate => {\n      this.exchangeRates.BRL = rate;\n      this.loading = false;\n    }, error => {\n      this.loading = false;\n    });\n  }\n}\n_class = ExchangeratesComponent;\n_class.ɵfac = function ExchangeratesComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.ToastrService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-exchangerates\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"spinner\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"spinner\"], [3, \"click\"]],\n  template: function ExchangeratesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ExchangeratesComponent_div_0_Template, 2, 0, \"div\", 0);\n      i0.ɵɵtemplate(1, ExchangeratesComponent_div_1_Template, 9, 2, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n    }\n  },\n  dependencies: [i3.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ExchangeratesComponent_div_1_Template_button_click_7_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","refreshRates","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","exchangeRates","USD","BRL","ExchangeratesComponent","constructor","apiService","toastr","loading","ngOnInit","getExchangeRate","subscribe","rate","error","ɵɵdirectiveInject","i1","ApiService","i2","ToastrService","selectors","decls","vars","consts","template","ExchangeratesComponent_Template","rf","ctx","ɵɵtemplate","ExchangeratesComponent_div_0_Template","ExchangeratesComponent_div_1_Template","ɵɵproperty"],"sources":["C:\\Users\\jeber\\source\\repos\\VirtualMind.Test\\Virtualmind.Test.SPA\\src\\app\\pages\\exchangerates\\exchangerates.component.ts","C:\\Users\\jeber\\source\\repos\\VirtualMind.Test\\Virtualmind.Test.SPA\\src\\app\\pages\\exchangerates\\exchangerates.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ApiService } from 'src/app/services/apiservice.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-exchangerates',\n  templateUrl: './exchangerates.component.html',\n  styleUrls: ['./exchangerates.component.css']\n})\nexport class ExchangeratesComponent {\n  exchangeRates: any = {};\n  loading: boolean = false;\n\n  constructor(private apiService: ApiService, private toastr: ToastrService,) {}\n\n  ngOnInit(): void {\n    this.refreshRates();\n  }\n  refreshRates(): void {\n    this.loading = true;\n    // For USD\n    this.apiService.getExchangeRate('USD').subscribe(rate => {\n      this.exchangeRates.USD = rate;\n      this.loading = false;\n    }, \n    (error) => {\n      this.toastr.error(`The following error has occurred ${error}`);\n      this.loading = false;\n    }\n  );\n  this.loading = true;\n    // For BRL\n    this.apiService.getExchangeRate('BRL').subscribe(rate => {\n      this.exchangeRates.BRL = rate;\n      this.loading = false;\n    }, \n      (error) => {\n        this.loading = false;\n      }\n    );\n  }\n\n}\n","<div *ngIf=\"loading\" class=\"spinner\">\n  Loading...\n  <!-- You can use any spinner library or CSS for this, but here's a simple text representation. -->\n</div>\n\n<div *ngIf=\"!loading\">\n  <h2>Exchange Rates</h2>\n  <p>USD: {{ exchangeRates.USD }}</p>\n  <p>BRL: {{ exchangeRates.BRL }}</p>\n  <button (click)=\"refreshRates()\">Refresh</button>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}