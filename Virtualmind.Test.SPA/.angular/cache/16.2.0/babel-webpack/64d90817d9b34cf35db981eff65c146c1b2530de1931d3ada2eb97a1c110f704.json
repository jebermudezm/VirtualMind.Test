{"ast":null,"code":"var _class;\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/apiservice.service\";\nimport * as i2 from \"ngx-spinner\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/common\";\nfunction ExchangeratesComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Exchange Rates\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ExchangeratesComponent_div_3_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.refreshRates());\n    });\n    i0.ɵɵtext(8, \"Refresh\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"USD: \", ctx_r0.exchangeRates.USD, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"BRL: \", ctx_r0.exchangeRates.BRL, \"\");\n  }\n}\nexport class ExchangeratesComponent {\n  constructor(apiService, spinner, toastr) {\n    this.apiService = apiService;\n    this.spinner = spinner;\n    this.toastr = toastr;\n    this.exchangeRates = {};\n    this.loading = false;\n  }\n  ngOnInit() {\n    this.fetchAll();\n  }\n  refreshRates() {\n    console.log(\"Begin\");\n    this.loading = true;\n    this.spinner.show();\n    // For USD\n    this.apiService.getExchangeRate('USD').subscribe(data => {\n      console.log(data);\n      this.exchangeRates.USD = data.rate;\n      this.spinner.hide();\n      this.loading = false;\n    }, error => {\n      this.toastr.error(`The following error has occurred ${error}`);\n      this.loading = false;\n      this.spinner.hide();\n    });\n    // console.log(\"Begin 2\");\n    // this.loading = true;\n    // this.spinner.show();\n    //   // For BRL\n    //   this.apiService.getExchangeRate('BRL').subscribe(rate => {\n    //     this.exchangeRates.BRL = rate;\n    //     this.spinner.hide();\n    //     this.loading = false;\n    //   }, \n    //     (error) => {\n    //       this.toastr.error(`The following error has occurred ${error}`);\n    //       this.spinner.hide();\n    //       this.loading = false;\n    //     }\n    //   );\n    console.log(\"End\");\n  }\n  fetchAll() {\n    this.spinner.show();\n    this.apiService.getExchangeRate('USD').pipe(tap(response => console.log('API response:', response))).subscribe(data => {\n      console.log(data);\n      this.spinner.show();\n    }, error => {\n      this.toastr.error(`The following error has occurred ${error}`);\n      this.loading = false;\n      this.spinner.hide();\n    });\n  }\n}\n_class = ExchangeratesComponent;\n_class.ɵfac = function ExchangeratesComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.NgxSpinnerService), i0.ɵɵdirectiveInject(i3.ToastrService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-exchangerates\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[\"bdColor\", \"rgba(51, 51, 51, 0.8)\", \"size\", \"default\", \"type\", \"ball-spin-clockwise\"], [2, \"color\", \"white\"], [4, \"ngIf\"], [3, \"click\"]],\n  template: function ExchangeratesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-spinner\", 0)(1, \"p\", 1);\n      i0.ɵɵtext(2, \"Please Wait. \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(3, ExchangeratesComponent_div_3_Template, 9, 2, \"div\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n    }\n  },\n  dependencies: [i4.NgIf, i2.NgxSpinnerComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["tap","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ExchangeratesComponent_div_3_Template_button_click_7_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","refreshRates","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","exchangeRates","USD","BRL","ExchangeratesComponent","constructor","apiService","spinner","toastr","loading","ngOnInit","fetchAll","console","log","show","getExchangeRate","subscribe","data","rate","hide","error","pipe","response","ɵɵdirectiveInject","i1","ApiService","i2","NgxSpinnerService","i3","ToastrService","selectors","decls","vars","consts","template","ExchangeratesComponent_Template","rf","ctx","ɵɵtemplate","ExchangeratesComponent_div_3_Template","ɵɵproperty"],"sources":["C:\\Users\\jeber\\source\\repos\\VirtualMind.Test\\Virtualmind.Test.SPA\\src\\app\\pages\\exchangerates\\exchangerates.component.ts","C:\\Users\\jeber\\source\\repos\\VirtualMind.Test\\Virtualmind.Test.SPA\\src\\app\\pages\\exchangerates\\exchangerates.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ApiService } from 'src/app/services/apiservice.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-exchangerates',\n  templateUrl: './exchangerates.component.html',\n  styleUrls: ['./exchangerates.component.css']\n})\nexport class ExchangeratesComponent {\n  exchangeRates: any = {};\n  loading: boolean = false;\n\n  constructor(private apiService: ApiService, private spinner: NgxSpinnerService, private toastr: ToastrService,) {}\n\n  ngOnInit(): void {\n    this.fetchAll();\n  }\n  refreshRates(): void {\n    console.log(\"Begin\");\n    this.loading = true;\n    this.spinner.show();\n    // For USD\n    this.apiService.getExchangeRate('USD').subscribe(data => {\n      console.log(data);\n      this.exchangeRates.USD = data.rate;\n      this.spinner.hide();\n      this.loading = false;\n    }, \n    (error) => {\n      this.toastr.error(`The following error has occurred ${error}`);\n      this.loading = false;\n      this.spinner.hide();\n    }\n  );\n  // console.log(\"Begin 2\");\n  // this.loading = true;\n  // this.spinner.show();\n  //   // For BRL\n  //   this.apiService.getExchangeRate('BRL').subscribe(rate => {\n\n  //     this.exchangeRates.BRL = rate;\n  //     this.spinner.hide();\n  //     this.loading = false;\n  //   }, \n  //     (error) => {\n  //       this.toastr.error(`The following error has occurred ${error}`);\n  //       this.spinner.hide();\n  //       this.loading = false;\n  //     }\n  //   );\n    console.log(\"End\");\n  }\n\n  fetchAll() {\n    this.spinner.show();\n    this.apiService.getExchangeRate('USD')\n      .pipe(\n        tap(response => console.log('API response:', response))\n      )\n      .subscribe(data => {\n        console.log(data);\n        this.spinner.show();\n      }, \n      (error) => {\n        this.toastr.error(`The following error has occurred ${error}`);\n        this.loading = false;\n        this.spinner.hide();\n      });\n  }\n}\n","  <ngx-spinner bdColor=\"rgba(51, 51, 51, 0.8)\" size=\"default\" type=\"ball-spin-clockwise\">  \n    <p style=\"color: white\">Please Wait. </p>  \n    </ngx-spinner>  \n\n  <div *ngIf=\"!loading\">\n    <h2>Exchange Rates</h2>\n    <p>USD: {{ exchangeRates.USD }}</p>\n    <p>BRL: {{ exchangeRates.BRL }}</p>\n    <button (click)=\"refreshRates()\">Refresh</button>\n  </div>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}